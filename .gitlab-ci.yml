stages:
  - build
  - publish

variables:
  FRONTEND_DIR: frontend
  BACKEND_DIR: JavaBackend

build-frontend:
  stage: build
  image: node:alpine
  script:
    - cd $FRONTEND_DIR
    - npm i
  only:
    changes:
      - $FRONTEND_DIR/Dockerfile
      - $FRONTEND_DIR/**/*

build-backend:
  stage: build
  image: maven:3-amazoncorretto-19
  script:
    - cd $BACKEND_DIR
    - mvn clean install -DskipTests
  artifacts:
    paths:
      - $BACKEND_DIR/target
  only:
    changes:
      - $BACKEND_DIR/Dockerfile
      - $BACKEND_DIR/**/*

publish-frontend:
  stage: publish
  variables:
    IMG_NAME: angryfishproject/frontend
    IMG_TAG: latest
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  image: docker:20.10.23
  services:
    - docker:20.10.23-dind
  before_script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
  script:
    - docker build -t $IMG_NAME:$IMG_TAG ./$FRONTEND_DIR
    - docker push $IMG_NAME:$IMG_TAG
  only:
    changes:
      - $FRONTEND_DIR/Dockerfile
      - $FRONTEND_DIR/**/*

publish-backend:
  stage: publish
  variables:
    IMG_NAME: angryfishproject/backend
    IMG_TAG: latest
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  image: docker:20.10.23
  services:
    - docker:20.10.23-dind
  before_script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
  script:
    - docker build -t $IMG_NAME:$IMG_TAG ./$BACKEND_DIR
    - docker push $IMG_NAME:$IMG_TAG
  only:
    changes:
      - $BACKEND_DIR/target/**/*
